#!/bin/sh
# shellcheck disable=1090,1091

# Shared code between boot/shutdown.
. /usr/lib/init/rc.lib

log "Loading rc.conf settings..."; {
    [ -f /etc/rc.conf ] && . /etc/rc.conf
}

log "Running shutdown pre hooks..."; {
    for file in /etc/rc.d/*.pre.shutdown; do
        [ -f "$file" ] && . "$file"
    done
}

log "Waiting for services to stop..."; {
    sv -w196 force-stop /var/service/*
    sv exit /var/service/*
} >/dev/null 2>&1

log "Saving random seed..."; {
    dd count=1 bs=512 if=/dev/random of=/var/random.seed
}

log "Sending TERM signal to all processes..."; {
    kall 15
    sleep 2
}

log "Sending KILL signal to all processes..."; {
    kall 9
}

log "Unmounting filesystems and disabling swap..."; {
    swapoff -a

    # Lazily unmount the filesystem prior to the regular
    # umount command to fix rare but possible errors.
    umount -a -l
    umount -a

    mount -o remount,ro /
    sync
}

log "Deactivating dmcrypt devices (if any exist)."; {
    [ -x /bin/cryptsetup ] && [ -x /bin/dmsetup ] && {
        dmsetup ls --target crypt \
                   --exec "dmsetup info -c --noheadings -o open,name" |

        while read -r drive; do
            cryptsetup close "${drive##*:}"
        done
    }
}

log "Running shutdown post hooks..."; {
    for file in /etc/rc.d/*.post.shutdown; do
        [ -f "$file" ] && . "$file"
    done
}

# Run 'kpow' to signal to the kernel that we want to reboot or
# poweroff the system. These will only run when '$1' contains
# a valid action. When busybox init is used, this code is
# ignored entirely as it handles this itself.
case $1 in
    reboot)   kpow r ;;
    poweroff) kpow p ;;
esac
